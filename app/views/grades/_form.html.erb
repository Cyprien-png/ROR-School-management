<%= form_with(model: grade, class: "space-y-6") do |form| %>
  <% if grade.errors.any? %>
    <div class="p-4 mb-6 bg-red-50 border-l-4 border-red-400">
      <div class="flex">
        <div class="flex-shrink-0">
          <i class="text-red-400 fas fa-exclamation-circle"></i>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">
            <%= pluralize(grade.errors.count, "error") %> prohibited this grade from being saved:
          </h3>
          <div class="mt-2 text-sm text-red-700">
            <ul class="pl-5 space-y-1 list-disc">
              <% grade.errors.each do |error| %>
                <li><%= error.full_message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <div class="overflow-hidden bg-white shadow sm:rounded-lg">
    <div class="px-4 py-5 bg-red-50 sm:px-6">
      <h3 class="text-lg font-medium leading-6 text-red-800">
        Grade Information
      </h3>
      <p class="mt-1 max-w-2xl text-sm text-red-600">
        Fill in the details for this grade
      </p>
    </div>
    <div class="px-4 py-5 border-t border-gray-200 sm:p-6">
      <div class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
        <div class="sm:col-span-2">
          <%= form.label :examination_id, class: "block text-sm font-medium text-gray-700" %>
          <%= form.collection_select :examination_id, 
                                   @examinations,
                                   :id,
                                   ->(e) { 
                                     if e.lecture.nil? || e.lecture.isDeleted?
                                       "#{e.title} (DELETED_LECTURE)"
                                     else
                                       subject_name = e.lecture.subject.nil? ? "DELETED_SUBJECT" : e.lecture.subject.name
                                       class_name = if e.lecture.school_class.nil?
                                         "DELETED_CLASS"
                                       elsif e.lecture.school_class.isDeleted?
                                         "#{e.lecture.school_class.name} (Deleted)"
                                       else
                                         e.lecture.school_class.name
                                       end
                                       "#{subject_name} - #{class_name} (#{e.date.strftime('%d.%m.%Y')})" 
                                     end
                                   },
                                   { prompt: "Select an examination" },
                                   { class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 sm:text-sm",
                                     onchange: "updateStudentsList(this.value)" } %>
        </div>

        <div class="sm:col-span-2">
          <%= form.label :student_id, "Student", class: "block text-sm font-medium text-gray-700" %>
          <div id="student-select-wrapper" class="mt-1">
            <%= form.collection_select :student_id,
                @grade.examination&.lecture&.school_class&.students || [],
                :id,
                ->(student) { "#{student.lastname} #{student.firstname}" },
                { prompt: "Select a student" },
                { class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 sm:text-sm",
                  disabled: @grade.examination.nil? } %>
          </div>
        </div>

        <div class="sm:col-span-2">
          <%= form.label :value, class: "block text-sm font-medium text-gray-700" %>
          <div class="mt-1">
            <%= form.number_field :value, step: "0.01", min: "1.00", max: "6.00", class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-red-500 focus:ring-red-500 sm:text-sm" %>
          </div>
          <p class="mt-2 text-sm text-gray-500">Value must be between 1.00 and 6.00</p>
        </div>
      </div>
    </div>
  </div>

  <div class="flex justify-end space-x-3">
    <%= form.submit class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500" %>
  </div>
<% end %>

<script>
function updateStudentsList(examinationId) {
  if (!examinationId) return;
  
  fetch(`/examinations/${examinationId}/students`)
    .then(response => response.json())
    .then(students => {
      const studentSelect = document.querySelector('select[name="grade[student_id]"]');
      studentSelect.innerHTML = '<option value="">Select a student</option>';
      
      students.forEach(student => {
        const option = document.createElement('option');
        option.value = student.id;
        option.textContent = `${student.lastname} ${student.firstname}`;
        studentSelect.appendChild(option);
      });
      
      studentSelect.disabled = false;
    });
}

// Initialize student list if examination is pre-selected
document.addEventListener('turbo:load', function() {
  const examinationSelect = document.querySelector('select[name="grade[examination_id]"]');
  if (examinationSelect.value) {
    updateStudentsList(examinationSelect.value);
  }
});
</script>
