<%#
  Reusable button component
  Usage: 
  render 'shared/button', 
    text: "Button Text", 
    color: "blue", # Options: blue, green, indigo, purple, yellow, red, gray
    icon: "fa-solid fa-plus", # Font Awesome icon class (optional)
    href: some_path, # For links
    type: "submit", # For form buttons
    method: :delete, # For delete links
    confirm: "Are you sure?", # For confirmation dialogs
    size: "md", # Options: sm, md, lg
    full_width: false, # true for full width button
    disabled: false # true to disable the button
%>

<% 
  # Define color classes based on the color parameter
  color_classes = {
    "blue" => "bg-blue-600 hover:bg-blue-700 focus:ring-blue-500 text-white",
    "green" => "bg-green-600 hover:bg-green-700 focus:ring-green-500 text-white",
    "indigo" => "bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 text-white",
    "purple" => "bg-purple-600 hover:bg-purple-700 focus:ring-purple-500 text-white",
    "yellow" => "bg-yellow-600 hover:bg-yellow-700 focus:ring-yellow-500 text-white",
    "red" => "bg-red-600 hover:bg-red-700 focus:ring-red-500 text-white",
    "gray" => "bg-gray-600 hover:bg-gray-700 focus:ring-gray-500 text-white",
    "outline-blue" => "bg-white hover:bg-blue-50 border-blue-600 text-blue-600 hover:text-blue-700",
    "outline-green" => "bg-white hover:bg-green-50 border-green-600 text-green-600 hover:text-green-700",
    "outline-indigo" => "bg-white hover:bg-indigo-50 border-indigo-600 text-indigo-600 hover:text-indigo-700",
    "outline-purple" => "bg-white hover:bg-purple-50 border-purple-600 text-purple-600 hover:text-purple-700",
    "outline-yellow" => "bg-white hover:bg-yellow-50 border-yellow-600 text-yellow-600 hover:text-yellow-700",
    "outline-red" => "bg-white hover:bg-red-50 border-red-600 text-red-600 hover:text-red-700",
    "outline-gray" => "bg-white hover:bg-gray-50 border-gray-600 text-gray-600 hover:text-gray-700"
  }
  
  # Set default color to indigo if not provided or invalid
  color = local_assigns.fetch(:color, "indigo")
  color_class = color_classes[color] || color_classes["indigo"]
  
  # Set size classes
  size_classes = {
    "sm" => "px-2.5 py-1.5 text-xs",
    "md" => "px-4 py-2 text-sm",
    "lg" => "px-6 py-3 text-base"
  }
  
  size = local_assigns.fetch(:size, "md")
  size_class = size_classes[size] || size_classes["md"]
  
  # Set width class
  width_class = local_assigns.fetch(:full_width, false) ? "w-full" : ""
  
  # Set disabled class
  disabled_class = local_assigns.fetch(:disabled, false) ? "opacity-50 cursor-not-allowed" : ""
  
  # Combine all classes
  button_class = "inline-flex justify-center items-center rounded-md border font-medium shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 #{color_class} #{size_class} #{width_class} #{disabled_class}"
  
  # Set icon if provided
  icon = local_assigns[:icon]
-%>

<% if local_assigns.has_key?(:href) -%>
  <% 
    # For links
    method = local_assigns[:method]
    confirm = local_assigns[:confirm]
    data_attributes = {}
    data_attributes[:turbo_method] = method if method
    data_attributes[:turbo_confirm] = confirm if confirm
  -%>
  
  <%= link_to local_assigns[:href], class: button_class, data: data_attributes do -%>
    <% if icon -%>
      <i class="<%= icon %> mr-2 -ml-1"></i>
    <% end -%>
    <%= local_assigns.fetch(:text, "Button") %>
  <% end -%>
<% else -%>
  <% 
    # For buttons
    type = local_assigns.fetch(:type, "button")
    disabled = local_assigns.fetch(:disabled, false)
  -%>
  
  <button type="<%= type %>" class="<%= button_class %>" <%= "disabled" if disabled %>>
    <% if icon -%>
      <i class="<%= icon %> mr-2 -ml-1"></i>
    <% end -%>
    <%= local_assigns.fetch(:text, "Button") %>
  </button>
<% end -%> 