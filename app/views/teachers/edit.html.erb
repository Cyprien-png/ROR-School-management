<% content_for :title, "Editing Teacher" -%>

<div class="space-y-6">
  <div class="flex justify-between items-center">
    <h1 class="text-2xl font-bold">Edit Teacher: <%= @teacher.firstname %> <%= @teacher.lastname %></h1>
    <div class="flex space-x-2">
      <%= render 'shared/button', 
        text: "View Details", 
        icon: "fa-solid fa-eye",
        color: "outline-green", 
        href: person_path(@teacher) %>
        
      <%= render 'shared/button', 
        text: "Back to People", 
        icon: "fa-solid fa-arrow-left",
        color: "outline-gray", 
        href: people_path %>
    </div>
  </div>

  <div class="overflow-hidden rounded-lg border border-green-200 shadow-sm mb-6">
    <div class="bg-green-50 px-4 py-5 sm:px-6 flex items-center">
      <i class="fa-solid fa-chalkboard-user mr-3 text-xl"></i>
      <h3 class="text-lg font-medium leading-6 text-green-700">
        Teacher Information
      </h3>
    </div>
    <div class="border-t border-gray-200 bg-white px-4 py-5 sm:p-6">
      <%= form_with(model: @teacher, class: "space-y-6") do |form| %>
        <% if @teacher.errors.any? %>
          <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-6">
            <div class="flex">
              <div class="flex-shrink-0">
                <i class="fas fa-exclamation-circle text-red-400"></i>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">
                  <%= pluralize(@teacher.errors.count, "error") %> prohibited this teacher from being saved:
                </h3>
                <div class="mt-2 text-sm text-red-700">
                  <ul class="list-disc pl-5 space-y-1">
                    <% @teacher.errors.each do |error| %>
                      <li><%= error.full_message %></li>
                    <% end %>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        <% end %>

        <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2">
          <div>
            <%= form.label :lastname, class: "block text-sm font-medium text-gray-700" %>
            <%= form.text_field :lastname, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" %>
          </div>

          <div>
            <%= form.label :firstname, class: "block text-sm font-medium text-gray-700" %>
            <%= form.text_field :firstname, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" %>
          </div>

          <div>
            <%= form.label :email, class: "block text-sm font-medium text-gray-700" %>
            <%= form.email_field :email, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" %>
          </div>

          <div>
            <%= form.label :phone_number, class: "block text-sm font-medium text-gray-700" %>
            <%= form.text_field :phone_number, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" %>
          </div>

          <div>
            <%= form.label :iban, class: "block text-sm font-medium text-gray-700" %>
            <%= form.text_field :iban, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" %>
          </div>
        </div>

        <div class="mt-6">
          <%= form.label :subject_ids, "Subjects", class: "block text-sm font-medium text-gray-700 mb-2" %>
          
          <div class="grid grid-cols-1 md:grid-cols-7 gap-4 items-start">
            <!-- Available subjects -->
            <div class="md:col-span-3">
              <div class="text-sm font-medium text-gray-700 mb-2">Available Subjects</div>
              <select id="available_subjects" multiple class="block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 h-60">
                <% 
                  # Get all subjects that are not assigned to this teacher
                  available_subjects = Subject.order(:name).to_a - @teacher.subjects.to_a 
                %>
                <% available_subjects.each do |subject| %>
                  <option value="<%= subject.id %>"><%= subject.name %></option>
                <% end %>
              </select>
            </div>
            
            <!-- Transfer buttons -->
            <div class="md:col-span-1 flex md:flex-col justify-center items-center space-y-2 py-4">
              <button type="button" id="add_subject" class="inline-flex items-center p-2 border border-transparent rounded-full shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                <i class="fas fa-chevron-right"></i>
              </button>
              <button type="button" id="remove_subject" class="inline-flex items-center p-2 border border-transparent rounded-full shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                <i class="fas fa-chevron-left"></i>
              </button>
            </div>
            
            <!-- Selected subjects -->
            <div class="md:col-span-3">
              <div class="text-sm font-medium text-gray-700 mb-2">Selected Subjects</div>
              <%= form.collection_select :subject_ids, 
                  @teacher.subjects.order(:name), 
                  :id, 
                  :name, 
                  {}, 
                  { multiple: true, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 h-60", id: "selected_subjects" } %>
            </div>
          </div>
          
          <p class="mt-2 text-sm text-gray-500">Click on a subject and use the arrow buttons to add or remove it</p>
        </div>

        <div class="border-t border-gray-200 pt-6">
          <h3 class="text-lg font-medium text-gray-900">Password</h3>
          <p class="mt-1 text-sm text-gray-500">Leave blank if you don't want to change the password</p>
          
          <div class="mt-4 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2">
            <div>
              <%= form.label :password, class: "block text-sm font-medium text-gray-700" %>
              <%= form.password_field :password, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" %>
            </div>

            <div>
              <%= form.label :password_confirmation, class: "block text-sm font-medium text-gray-700" %>
              <%= form.password_field :password_confirmation, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500" %>
            </div>
          </div>
        </div>

        <div class="flex justify-end">
          <%= form.submit "Update Teacher", class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500" %>
        </div>
        
        <script>
          document.addEventListener('DOMContentLoaded', function() {
            const availableSubjects = document.getElementById('available_subjects');
            const selectedSubjects = document.getElementById('selected_subjects');
            const addButton = document.getElementById('add_subject');
            const removeButton = document.getElementById('remove_subject');
            
            // Add subject button
            addButton.addEventListener('click', function() {
              moveOptions(availableSubjects, selectedSubjects);
              updateSelectedOptions();
            });
            
            // Remove subject button
            removeButton.addEventListener('click', function() {
              moveOptions(selectedSubjects, availableSubjects);
              updateSelectedOptions();
            });
            
            // Double-click to move
            availableSubjects.addEventListener('dblclick', function() {
              moveOptions(availableSubjects, selectedSubjects);
              updateSelectedOptions();
            });
            
            selectedSubjects.addEventListener('dblclick', function() {
              moveOptions(selectedSubjects, availableSubjects);
              updateSelectedOptions();
            });
            
            // Helper function to move options between select elements
            function moveOptions(fromSelect, toSelect) {
              const selectedOptions = Array.from(fromSelect.selectedOptions);
              
              selectedOptions.forEach(option => {
                const newOption = document.createElement('option');
                newOption.value = option.value;
                newOption.text = option.text;
                toSelect.add(newOption);
                fromSelect.remove(fromSelect.options.selectedIndex);
              });
              
              // Sort the destination list alphabetically
              sortSelectOptions(toSelect);
            }
            
            // Helper function to sort select options alphabetically
            function sortSelectOptions(selectElement) {
              const options = Array.from(selectElement.options);
              options.sort((a, b) => a.text.localeCompare(b.text));
              
              while (selectElement.options.length > 0) {
                selectElement.remove(0);
              }
              
              options.forEach(option => {
                selectElement.add(option);
              });
            }
            
            // Make sure all options in the selected list are actually selected when submitting
            function updateSelectedOptions() {
              for (let i = 0; i < selectedSubjects.options.length; i++) {
                selectedSubjects.options[i].selected = true;
              }
            }
            
            // Ensure all options are selected when the form is submitted
            document.querySelector('form').addEventListener('submit', function() {
              updateSelectedOptions();
            });
          });
        </script>
      <% end %>
    </div>
  </div>
</div> 